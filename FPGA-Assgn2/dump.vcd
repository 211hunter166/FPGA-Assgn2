$date
	Wed Jun 08 10:49:08 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb $end
$var reg 5 ! i1 [4:0] $end
$var reg 5 " i2 [4:0] $end
$var reg 32 # num [31:0] $end
$scope module uut $end
$var wire 5 $ index1 [4:0] $end
$var wire 5 % index2 [4:0] $end
$var wire 32 & num [31:0] $end
$var reg 32 ' curr [31:0] $end
$var reg 5 ( curr_index [4:0] $end
$var reg 32 ) in_num [31:0] $end
$var reg 1 * status $end
$var integer 32 + k [31:0] $end
$scope module m1 $end
$var integer 32 , i [31:0] $end
$upscope $end
$scope module m2 $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 - j [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 . j [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop10 $end
$var integer 32 / i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop11 $end
$var integer 32 0 i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop2 $end
$var integer 32 1 i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop3 $end
$var integer 32 2 i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop4 $end
$var integer 32 3 i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop5 $end
$var integer 32 4 i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop6 $end
$var integer 32 5 i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop7 $end
$var integer 32 6 i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop8 $end
$var integer 32 7 i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop9 $end
$var integer 32 8 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
b1011 -
b10100 ,
b1011 +
0*
bx )
bx (
bx '
b1000110 &
b1010 %
b0 $
b1000110 #
b1010 "
b0 !
$end
#10
b10 "
b10 %
b1000 !
b1000 $
b1010010 #
b1010010 &
b10100 2
b10100 1
#20
b10011 "
b10011 %
b1011 !
b1011 $
b1011 #
b1011 &
b10100 4
b10100 3
#30
b1011 "
b1011 %
b1011011 #
b1011011 &
b10100 6
b10100 5
#40
b101 "
b101 %
b10001 !
b10001 $
b1101 #
b1101 &
b10100 8
b10100 7
#50
b10100 0
b10100 /
